; PlatformIO Project Configuration File for RGBFighter 
; 7.5.24 - Adding Lighthouse V1 and StageFighter V6
; Integrate or replace this content to your Plaformio.ini in your WLED Folder.
; Please visit documentation: https://docs.platformio.org/page/projectconf.html

[platformio]
# ------------------------------------------------------------------------------
# ENVIRONMENTS
#
# Please uncomment one of the lines below to select your board(s)
# (use `platformio_override.ini` when building for your own board; see `platformio_override.ini.sample` for an example)
# ------------------------------------------------------------------------------

# CI binaries
; default_envs = nodemcuv2, esp8266_2m, esp01_1m_full, esp32dev, esp32_eth # ESP32 variant builds are temporarily excluded from CI due to toolchain issues on the GitHub Actions Linux environment
;default_envs = nodemcuv2, esp8266_2m, esp01_1m_full, nodemcuv2_160, esp8266_2m_160, esp01_1m_full_160, esp32dev, esp32_eth, esp32dev_audioreactive, lolin_s2_mini, esp32c3dev, esp32s3dev_8MB, esp32s3dev_8MB_PSRAM_opi
default_envs = StageFighter
# Release binaries
; default_envs = StageFighter

# Build everything
; default_envs = esp32dev, esp8285_4CH_MagicHome, codm-controller-0_6-rev2, codm-controller-0_6, esp32s2_saola, d1_mini_5CH_Shojo_PCB, d1_mini, sp501e, nodemcuv2, esp32_eth, anavi_miracle_controller, esp07, esp01_1m_full, m5atom, h803wf, d1_mini_ota, heltec_wifi_kit_8, esp8285_H801, d1_mini_debug, wemos_shield_esp32, elekstube_ips

# Single binaries (uncomment your board)
; default_envs = StageFighter

src_dir  = ./wled00
data_dir = ./wled00/data
build_cache_dir = ~/.buildcache
extra_configs =
;  platformio_override.ini

[common]
# ------------------------------------------------------------------------------
# PLATFORM:
#   !! DO NOT confuse platformio's ESP8266 development platform with Arduino core for ESP8266
#
#   arduino core 2.6.3 = platformIO 2.3.2
#   arduino core 2.7.0 = platformIO 2.5.0
# ------------------------------------------------------------------------------
arduino_core_2_6_3 = espressif8266@2.3.3
arduino_core_2_7_4 = espressif8266@2.6.2
arduino_core_3_0_0 = espressif8266@3.0.0
arduino_core_3_2_0 = espressif8266@3.2.0
arduino_core_4_1_0 = espressif8266@4.1.0
arduino_core_3_1_2 = espressif8266@4.2.1

# Development platforms
arduino_core_develop = https://github.com/platformio/platform-espressif8266#develop
arduino_core_git = https://github.com/platformio/platform-espressif8266#feature/stage

# Platform to use for ESP8266
platform_wled_default = ${common.arduino_core_3_1_2}
# We use 2.7.4.7 for all, includes PWM flicker fix and Wstring optimization
#platform_packages = tasmota/framework-arduinoespressif8266 @ 3.20704.7
platform_packages = platformio/toolchain-xtensa @ ~2.100300.220621 #2.40802.200502
                    platformio/tool-esptool #@ ~1.413.0
                    platformio/tool-esptoolpy #@ ~1.30000.0

## previous platform for 8266, in case of problems with the new one
## you'll need  makuna/NeoPixelBus@ 2.6.9 for arduino_core_3_2_0, which does not support Ucs890x
;; platform_wled_default = ${common.arduino_core_3_2_0}
;; platform_packages = tasmota/framework-arduinoespressif8266 @ 3.20704.7
;;                    platformio/toolchain-xtensa @ ~2.40802.200502
;;                    platformio/tool-esptool @ ~1.413.0
;;                    platformio/tool-esptoolpy @ ~1.30000.0

# ------------------------------------------------------------------------------
# FLAGS: DEBUG
# esp8266 : see https://docs.platformio.org/en/latest/platforms/espressif8266.html#debug-level
# esp32   : see https://docs.platformio.org/en/latest/platforms/espressif32.html#debug-level
# ------------------------------------------------------------------------------
debug_flags = -D DEBUG=1 -D WLED_DEBUG
  -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_TLS_MEM ;; for esp8266
  # if needed (for memleaks etc) also add; -DDEBUG_ESP_OOM -include "umm_malloc/umm_malloc_cfg.h"
  # -DDEBUG_ESP_CORE is not working right now

# ------------------------------------------------------------------------------
# FLAGS: ldscript (available ldscripts at https://github.com/esp8266/Arduino/tree/master/tools/sdk/ld)
#    ldscript_2m1m (2048 KB) = 1019 KB sketch, 4 KB eeprom, 1004 KB spiffs, 16 KB reserved
#    ldscript_4m1m (4096 KB) = 1019 KB sketch, 4 KB eeprom, 1002 KB spiffs, 16 KB reserved, 2048 KB empty/ota?
#
# Available lwIP variants (macros):
#    -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH  = v1.4 Higher Bandwidth (default)
#    -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY       = v2 Lower Memory
#    -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH = v2 Higher Bandwidth
#    -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
#
# BearSSL performance:
#  When building with -DSECURE_CLIENT=SECURE_CLIENT_BEARSSL, please add `board_build.f_cpu = 160000000` to the environment configuration
#
# BearSSL ciphers:
#   When building on core >= 2.5, you can add the build flag -DBEARSSL_SSL_BASIC in order to build BearSSL with a limited set of ciphers:
#     TLS_RSA_WITH_AES_128_CBC_SHA256 / AES128-SHA256
#     TLS_RSA_WITH_AES_256_CBC_SHA256 / AES256-SHA256
#     TLS_RSA_WITH_AES_128_CBC_SHA / AES128-SHA
#     TLS_RSA_WITH_AES_256_CBC_SHA / AES256-SHA
#  This reduces the OTA size with ~45KB, so it's especially useful on low memory boards (512k/1m).
# ------------------------------------------------------------------------------
build_flags =
  -Wno-attributes
  -DMQTT_MAX_PACKET_SIZE=1024
  -DSECURE_CLIENT=SECURE_CLIENT_BEARSSL
  -DBEARSSL_SSL_BASIC
  -D CORE_DEBUG_LEVEL=0
  -D NDEBUG
  -Wno-attributes ;; silence warnings about unknown attribute 'maybe_unused' in NeoPixelBus
  #build_flags for the IRremoteESP8266 library (enabled decoders have to appear here)
  -D _IR_ENABLE_DEFAULT_=false
  -D DECODE_HASH=true
  -D DECODE_NEC=true
  -D DECODE_SONY=true
  -D DECODE_SAMSUNG=true
  -D DECODE_LG=true
  ;-Dregister= # remove warnings in C++17 due to use of deprecated register keyword by the FastLED library ;; warning: this breaks framework code on ESP32-C3 and ESP32-S2
  ; -DWLED_USE_MY_CONFIG
  ; -D USERMOD_SENSORSTOMQTT
  #For ADS1115 sensor uncomment following
  ; -D USERMOD_ADS1115

build_unflags =

build_flags_esp8266 = ${common.build_flags}  ${esp8266.build_flags}
build_flags_esp32   = ${common.build_flags}  ${esp32.build_flags}
; build_flags_esp32_V4= ${common.build_flags}  ${esp32_idf_V4.build_flags}

ldscript_1m128k = eagle.flash.1m128.ld
ldscript_2m512k = eagle.flash.2m512.ld
ldscript_2m1m = eagle.flash.2m1m.ld
ldscript_4m1m = eagle.flash.4m1m.ld

[scripts_defaults]
extra_scripts =
  pre:pio-scripts/set_version.py
  post:pio-scripts/output_bins.py
  post:pio-scripts/strip-floats.py
  pre:pio-scripts/user_config_copy.py

# ------------------------------------------------------------------------------
# COMMON SETTINGS:
# ------------------------------------------------------------------------------
[env]
framework = arduino
board_build.flash_mode = dout
monitor_speed = 115200
# slow upload speed (comment this out with a ';' when building for development use)
; upload_speed = 115200
# fast upload speed (remove ';' when building for development use)
upload_speed = 921600

# ------------------------------------------------------------------------------
# LIBRARIES: required dependencies
#   Please note that we don't always use the latest version of a library.
#
#   The following libraries have been included (and some of them changed) in the source:
#     ArduinoJson@5.13.5, E131@1.0.0(changed), Time@1.5, Timezone@1.2.1
# ------------------------------------------------------------------------------
lib_compat_mode = strict
lib_deps =
    fastled/FastLED @ 3.6.0
    IRremoteESP8266 @ 2.8.2
    makuna/NeoPixelBus @ 2.7.5
    https://github.com/Aircoookie/ESPAsyncWebServer.git @ ^2.2.0
  #For use of the TTGO T-Display ESP32 Module with integrated TFT display uncomment the following line
    #TFT_eSPI
  #For compatible OLED display uncomment following
    #U8g2 #@ ~2.33.15
  #For Dallas sensor uncomment following
    OneWire @ ~2.3.7
  #For BME280 sensor uncomment following
    #BME280 @ ~3.0.0
    ; adafruit/Adafruit BMP280 Library @ 2.1.0
    ; adafruit/Adafruit CCS811 Library @ 1.0.4
    ; adafruit/Adafruit Si7021 Library @ 1.4.0
  #For ADS1115 sensor uncomment following
    ; adafruit/Adafruit BusIO @ 1.13.2
    ; adafruit/Adafruit ADS1X15 @ 2.4.0

extra_scripts = ${scripts_defaults.extra_scripts}

[esp8266]
build_flags =
  -DESP8266
  -DFP_IN_IROM
  ;-Wno-deprecated-declarations
  ;-Wno-register  ;; leaves some warnings when compiling C files: command-line option '-Wno-register' is valid for C++/ObjC++ but not for C
  ;-Dregister= # remove warnings in C++17 due to use of deprecated register keyword by the FastLED library ;; warning: this can be dangerous
  -Wno-misleading-indentation
  ; NONOSDK22x_190703 = 2.2.2-dev(38a443e)
  -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
  ; lwIP 2 - Higher Bandwidth no Features
  ;  -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
  ; lwIP 1.4 - Higher Bandwidth (Aircoookie has)
  -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
  ; VTABLES in Flash
  -DVTABLES_IN_FLASH
  ; restrict to minimal mime-types
  -DMIMETYPE_MINIMAL
  ; other special-purpose framework flags (see https://docs.platformio.org/en/latest/platforms/espressif8266.html)
  -D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48 ;; in case of linker errors like "section `.text1' will not fit in region `iram1_0_seg'"
  ; -D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED ;; (experimental) adds some extra heap, but may cause slowdown

lib_deps =
  #https://github.com/lorol/LITTLEFS.git
  ESPAsyncTCP @ 1.2.2
  ESPAsyncUDP
  ${env.lib_deps}

[esp32]
#platform = https://github.com/tasmota/platform-espressif32/releases/download/v2.0.2.3/platform-espressif32-2.0.2.3.zip
platform = espressif32@3.5.0
platform_packages = framework-arduinoespressif32 @ https://github.com/Aircoookie/arduino-esp32.git#1.0.6.4
build_flags = -g
  -DARDUINO_ARCH_ESP32
  #-DCONFIG_LITTLEFS_FOR_IDF_3_2
  -D CONFIG_ASYNC_TCP_USE_WDT=0
  #use LITTLEFS library by lorol in ESP32 core 1.x.x instead of built-in in 2.x.x
  -D LOROL_LITTLEFS
  ; -DARDUINO_USB_CDC_ON_BOOT=0 ;; this flag is mandatory for "classic ESP32" when building with arduino-esp32 >=2.0.3
default_partitions = tools/WLED_ESP32_4MB_1MB_FS.csv
lib_deps =
  https://github.com/lorol/LITTLEFS.git
  https://github.com/pbolduc/AsyncTCP.git @ 1.2.0
  ${env.lib_deps}
# additional build flags for audioreactive
AR_build_flags = -D USERMOD_AUDIOREACTIVE -D UM_AUDIOREACTIVE_USE_NEW_FFT
AR_lib_deps = https://github.com/kosme/arduinoFFT#419d7b0

[esp32_idf_V4]
;; experimental build environment for ESP32 using ESP-IDF 4.4.x / arduino-esp32 v2.0.5
;; very similar to the normal ESP32 flags, but omitting Lorol LittleFS, as littlefs is included in the new framework already.
;;
;; please note that you can NOT update existing ESP32 installs with a "V4" build. Also updating by OTA will not work properly.
;; You need to completely erase your device (esptool erase_flash) first, then install the "V4" build from VSCode+platformio.
platform = espressif32@5.3.0
platform_packages =
build_flags = -g
  -Wshadow=compatible-local ;; emit warning in case a local variable "shadows" another local one
  -DARDUINO_ARCH_ESP32 -DESP32
  #-DCONFIG_LITTLEFS_FOR_IDF_3_2
  -D CONFIG_ASYNC_TCP_USE_WDT=0
  -DARDUINO_USB_CDC_ON_BOOT=0 ;; this flag is mandatory for "classic ESP32" when building with arduino-esp32 >=2.0.3
default_partitions = tools/WLED_ESP32_4MB_1MB_FS.csv
lib_deps =
  https://github.com/pbolduc/AsyncTCP.git @ 1.2.0
  ${env.lib_deps}


# ------------------------------------------------------------------------------
# StageFighter-V6-ONONO
# ------------------------------------------------------------------------------
[env:StageFighter]
board = esp32dev
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} ;   ${esp32.AR_build_flags}
# upload_speed = 460800
# https://mm.kno.wled.ge/advanced/buildflags/
# https://mm.kno.wled.ge/advanced/buildflags/#wled-usermods
# ---- DEVICE ----
  -D WLED_RELEASE_NAME=StageFighter
  -D ABL_MILLIAMPS_DEFAULT=1250
  -D WLED_DEBUG
  -D WLED_DISABLE_BROWNOUT_DET ; MM
#  -D NOWIFISLEEP=false
  -D WLED_DISABLE_ESPNOW
  -D WLED_DISABLE_BLYNK
  -D WLED_DISABLE_ADALIGHT  ;; WLEDMM this board does not have a serial-to-USB chip. Better to disable serial protocols, to avoid crashes (see upstream #3128)
  -D RLYPIN=-1
  -D BTNPIN=-1
  -D LED_BUILTIN=-1
;  -D USERMOD_FASTLED ; MM Enables extra effects with a Creative Commons license. Do not enable this if using WLED in a for-profit manner.
# ---- NETWORK ----
  -D SERVERNAME="\"StageFighter\""
;  -D CLIENT_SSID='"YourHomeNetwork"'
;  -D CLIENT_PASS='"YourPassword"'
;  -D AP_BEHAVIOR_BOOT_NO_CONN ; Open AP when no connection after boot

  -D WLED_AP_SSID_UNIQUE=1 ;
  -D WLED_MAX_USERMODS=6 
  -D WLED_USE_ETHERNET
  ;-D ETH_PHY_ADDR=1
  ;-D ETH_PHY_POWER=16
  ;-D ETH_PHY_MDC=23
  ;-D ETH_PHY_MDIO=18
  ;-D ETH_CLK_MODE=ETH_CLOCK_GPIO0_IN
  -D WLED_ETH_DEFAULT=1 ; wled00/const.h

# ---- LED OUTPUT ----
  -D PIXEL_COUNTS="150,150,150,150,150,150,150"
  -D DATA_PINS="14,15,17,33"
  -D DEFAULT_LED_COLOR_ORDER=COL_ORDER_RGB
  -D DEFAULT_LED_COUNT=150
;  -D DEFAULT_LED_TYPE
# ---- ANALOG INPUT ---- 
#  -D USERMOD_SN_PHOTORESISTOR ; Mod1
#  -D USERMOD_AUTOBRIGHTNESS_PHOTORESISTOR ; Mod2
#  -D USERMOD_AUTOBRIGHTNESS_PHOTORESISTOR_PIN=35
#  -D USERMOD_LDR_DUSK_DAWN ; Mod3

# ---- Battery ---- https://github.com/Aircoookie/WLED/tree/main/usermods/Battery
  -D USERMOD_BATTERY ; enable Battery usermod
  -D USERMOD_BATTERY_MEASUREMENT_PIN=35
  -D USERMOD_BATTERY_MIN_VOLTAGE=2.6
  -D USERMOD_BATTERY_MAX_VOLTAGE=14.6

# ---- Temperature ----
  -D TEMPERATURE_PIN=2
  -D USERMOD_DALLASTEMPERATURE ; define this to have this user mod included wled00\usermods_list.cpp
  -D USERMOD_DALLASTEMPERATURE_CELSIUS ; define this to report temperatures in degrees celsius, otherwise fahrenheit will be reported
  -D USERMOD_DALLASTEMPERATURE_MEASUREMENT_INTERVAL=1000 ; the number of milliseconds between measurements, defaults to 60 seconds
  -D USERMOD_DALLASTEMPERATURE_FIRST_MEASUREMENT_AT=20 ; the number of milliseconds after boot to take first measurement, defaults to 20 seconds

lib_deps = ${esp32.lib_deps}
    milesburton/DallasTemperature@^3.9.0
    OneWire@~2.3.5
    https://github.com/Aircoookie/ESPAsyncWebServer
    #https://github.com/FastLED/FastLED
    #arduinoFFT@~1.6.2     
    #https://github.com/Aircoookie/WLED/tree/main/usermods/audioreactive
    https://github.com/blazoncek/arduinoFFT.git
    #https://github.com/kosme/arduinoFFT@~1.6.2     
    #https://github.com/kosme/arduinoFFT#develop @ 1.6.2
    # ${esp32.AR_lib_deps}   

board_build.partitions = ${esp32.default_partitions}
extra_scripts = ${scripts_defaults.extra_scripts}

# ------------------------------------------------------------------------------
# LightHouse-V1-ONONO
# ------------------------------------------------------------------------------
[env:StageFighter]
board = esp32dev
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags_esp32} ;   ${esp32.AR_build_flags}
# upload_speed = 460800
# https://mm.kno.wled.ge/advanced/buildflags/
# https://mm.kno.wled.ge/advanced/buildflags/#wled-usermods
# ---- DEVICE ----
  -D WLED_RELEASE_NAME=StageFighter
  -D ABL_MILLIAMPS_DEFAULT=1250
  -D WLED_DEBUG
  -D WLED_DISABLE_BROWNOUT_DET ; MM
#  -D NOWIFISLEEP=false
  -D WLED_DISABLE_ESPNOW
  -D WLED_DISABLE_BLYNK
  -D WLED_DISABLE_ADALIGHT  ;; WLEDMM this board does not have a serial-to-USB chip. Better to disable serial protocols, to avoid crashes (see upstream #3128)
  -D RLYPIN=-1
  -D BTNPIN=-1
  -D LED_BUILTIN=-1
;  -D USERMOD_FASTLED ; MM Enables extra effects with a Creative Commons license. Do not enable this if using WLED in a for-profit manner.
# ---- NETWORK ----
  -D SERVERNAME="\"LightHouse\""
;  -D CLIENT_SSID='"YourHomeNetwork"'
;  -D CLIENT_PASS='"YourPassword"'
;  -D AP_BEHAVIOR_BOOT_NO_CONN ; Open AP when no connection after boot
  -D WLED_AP_SSID_UNIQUE=1 ;
  -D WLED_MAX_USERMODS=6 
  -D WLED_USE_ETHERNET
  ;-D ETH_PHY_ADDR=1
  ;-D ETH_PHY_POWER=16
  ;-D ETH_PHY_MDC=23
  ;-D ETH_PHY_MDIO=18
  ;-D ETH_CLK_MODE=ETH_CLOCK_GPIO0_IN
  -D WLED_ETH_DEFAULT=1 ; wled00/const.h

# ---- LED OUTPUT ----
  -D PIXEL_COUNTS="150,150,150,150,150,150,150"
  -D DATA_PINS="32,33,5,15,14,17,4,2"
  -D DEFAULT_LED_COLOR_ORDER=COL_ORDER_RGB
  -D DEFAULT_LED_COUNT=150
;  -D DEFAULT_LED_TYPE

# ---- ANALOG INPUT ---- 
#  -D USERMOD_SN_PHOTORESISTOR ; Mod1
#  -D USERMOD_AUTOBRIGHTNESS_PHOTORESISTOR ; Mod2
#  -D USERMOD_AUTOBRIGHTNESS_PHOTORESISTOR_PIN=35
#  -D USERMOD_LDR_DUSK_DAWN ; Mod3

# ---- Battery ---- https://github.com/Aircoookie/WLED/tree/main/usermods/Battery
  -D USERMOD_BATTERY ; enable Battery usermod
  -D USERMOD_BATTERY_MEASUREMENT_PIN=35
  -D USERMOD_BATTERY_MIN_VOLTAGE=2.6
  -D USERMOD_BATTERY_MAX_VOLTAGE=14.6

# ---- Audio Reactive ---- https://github.com/Aircoookie/WLED/tree/main/usermods/audioreactive
  -D USERMOD_AUDIOREACTIVE ;     https://github.com/blazoncek/arduinoFFT.git
;  -D UM_AUDIOREACTIVE_USE_NEW_FFT ; https://github.com/kosme/arduinoFFT#develop @ 1.9.2
  -D AUDIOPIN=36
  -D SR_DMTYPE=0 ;  0=analog, 1=generic I2S (default), 2=ES7243 I2S, 3=SPH0645 I2S, 4=generic I2S with master clock, 5=PDM I2S
  -D I2S_SDPIN=-1
  -D I2S_WSPIN=-1
  -D I2S_CKPIN=-1
  -D MCLK_PIN=-1
  -D ES7243_SDAPIN=-1
  -D ES7243_SCLPIN=-1
  -D UM_AUDIOREACTIVE_ENABLE ; makes usermod default enabled (not the same as include into build option!)
  -D UM_AUDIOREACTIVE_DYNAMICS_LIMITER_OFF ; disables rise/fall limiter default
  -D SR_SQUELCH=10 ; Default "squelch" setting (10)
  -D SR_GAIN=60 ; Default "gain" setting (60)  
  -D SR_ENABLE_DEFAULT ; enable at first start - no need to manually set "enable", then reboot 

# ---- InfraRed ----
  -D IRPIN=39
  -D IRTYPE=1 ;0 Remote disabled | 1 24-key RGB | 2 24-key with CT | 3 40-key blue | 4 40-key RGB | 5 21-key RGB | 6 6-key black | 7 9-key red | 8 JSON remote
  
lib_deps = ${esp32.lib_deps}
    milesburton/DallasTemperature@^3.9.0
    OneWire@~2.3.5
    https://github.com/Aircoookie/ESPAsyncWebServer
    #https://github.com/FastLED/FastLED
    #arduinoFFT@~1.6.2     
    #https://github.com/Aircoookie/WLED/tree/main/usermods/audioreactive
    https://github.com/blazoncek/arduinoFFT.git
    #https://github.com/kosme/arduinoFFT@~1.6.2     
    #https://github.com/kosme/arduinoFFT#develop @ 1.6.2
    # ${esp32.AR_lib_deps}   

board_build.partitions = ${esp32.default_partitions}
extra_scripts = ${scripts_defaults.extra_scripts}
